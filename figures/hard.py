import numpy as np
import matplotlib.pyplot as plt

plt.rcParams["figure.figsize"] = (16,8)
plt.rcParams.update({'font.size': 12})

fig, axss = plt.subplots(2, 3)
axs = [axss[0, 0], axss[0, 1], axss[0,2], axss[1, 0], axss[1, 1], axss[1, 2]]

tog = [ 
['2M', '4M', '6M', '8M', '10M']
,['2M', '4M', '6M', '8M', '10M']
,['.2k', '.4k', '.6k', '.8k', '1k']
,['1k', '2k', '3k', '4k', '5k']
,['1k', '2k', '3k', '4k', '5k']
,['.2k', '.4k', '.6k', '.8k', '1k', '1.2k']
]

tfgh = [
['2M', '4M', '6M', '8M', '10M']
,['2M', '4M', '6M', '8M', '10M']
,['.2k', '.4k', '.6k', '.8k', '1k', '1.2k', '1.4k', '1.6k', '1.8k', '2k']
,['1k', '2k', '3k', '4k', '5k', '6k', '7k', '8k', '9k', '10k']
,['1k', '2k', '3k', '4k', '5k', '6k', '7k', '8k', '9k', '10k']
,['.2k', '.4k', '.6k', '.8k', '1k', '1.2k', '1.4k', '1.6k', '1.8k', '2k']
]

tsn = [
['2M', '4M', '6M', '8M', '10M']
,['2M', '4M', '6M', '8M', '10M']
,['.2k', '.4k', '.6k', '.8k', '1k', '1.2k', '1.4k', '1.6k', '1.8k', '2k']
,['1k', '2k', '3k', '4k', '5k', '6k', '7k', '8k', '9k', '10k']
,['1k', '2k', '3k', '4k', '5k', '6k', '7k', '8k', '9k', '10k']
,['.2k', '.4k', '.6k', '.8k', '1k', '1.2k', '1.4k', '1.6k', '1.8k', '2k']
]

og = [
[78.6846 ,165.387 ,314.06 ,421.425 ,580.489],
[56.2352 ,121.107 ,222.099 ,292.819 ,492.328],
[ 1.83097 ,15.981 ,53.84 ,126.373 ,239.856 ], 
[ 8.68057, 51.2552, 156.079, 371.379, 720.248], 
[ 7.41297 , 42.9997, 129.166 ,301.132 ,582.821 ], 
[5.70438 ,19.6142, 44.9944 ,80.5531 ,129.745, 204.091]
]


fgh = [
[78.7337 ,154.527 ,259.629 ,368.772 ,510.033]
, [ 63.0193 ,132.625 ,243.024 ,326.579 , 449.703]
, [ 2.47922 ,9.7746 ,13.1458 ,25.7596 ,31.9444, 53.1139, 77.9946, 83.2973, 110.475, 144.809 ]
, [ 1.79763, 2.78945, 4.3512, 6.22697, 8.18175, 11.0052, 13.2116, 16.6127, 19.8212, 24.3129 ]
, [ 1.00015 ,1.80902 ,2.70924 ,4.07006 ,5.77172,  7.15364, 8.86899,  11.2938,  13.7524, 16.8231 ]
, [2.94472 ,7.21921 ,13.2658 ,23.6872 ,30.1093, 44.656, 59.507, 77.4117, 92.080, 104.71 ]
]


sn = [ [45.6269 ,92.3486 ,157.713 ,209.726 ,278.084]
, [ 53.7104 ,102.149 ,168.214 ,226.263 ,308.93]
, [2.53759 ,8.99992 ,11.101 ,19.5857 ,25.999, 42.0948, 57.192, 65.5204, 82.5113, 101.756]
, [3.19953, 6.8432, 10.0575, 14.6727, 20.0037, 24.0987, 29.89, 36.5374, 45.4705, 52.4275]
, [3.51973 ,6.94606 ,10.9084 ,16.3129 ,21.4984, 31.6999, 33.5069, 41.3762, 51.2197, 59.9394 ]
, [4.13747 ,9.44891 ,16.1836 ,24.583 ,33.5319, 44.777, 59.370, 72.790, 88.7069, 105.399]
]

og = [[ n/r[0] for n in r] for r in og]
sn = [[ n/r[0] for n in r] for r in sn]
fgh = [[ n/r[0] for n in r] for r in fgh]

l = ['R (random recursive tree)', 'MLM (random recursive tree)', 'BC', 'R (recursive tree w/ exp. decay)',  'MLM (recursive tree w/ exp. decay)', 'WS']

for i, ax in enumerate(axs):
  ax.plot(tog[i], og[i], color='#9673a6', label='original', linestyle=':')
  ax.plot(tfgh[i], fgh[i], color='#82b366', label='FGH', linestyle='--')
  ax.plot(tsn[i], sn[i], color='#d79b00', label='FGH+GSN')
  if i == 0 or i == 3:
    ax.set_ylabel('relative time')
  ax.set_title(l[i])
  ax.grid(axis='y')
  ax.legend(loc='upper left')

plt.tight_layout()
plt.savefig("hard_bench.pdf")
